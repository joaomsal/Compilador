/* This file was generated by SableCC (http://www.sablecc.org/). */

package nonneuman.node;

import nonneuman.analysis.*;

@SuppressWarnings("nls")
public final class AIfACondicional extends PACondicional
{
    private TIfId _ifId_;
    private PACondicao _aCondicao_;
    private TThenId _thenId_;
    private PAExpr _aExpr_;

    public AIfACondicional()
    {
        // Constructor
    }

    public AIfACondicional(
        @SuppressWarnings("hiding") TIfId _ifId_,
        @SuppressWarnings("hiding") PACondicao _aCondicao_,
        @SuppressWarnings("hiding") TThenId _thenId_,
        @SuppressWarnings("hiding") PAExpr _aExpr_)
    {
        // Constructor
        setIfId(_ifId_);

        setACondicao(_aCondicao_);

        setThenId(_thenId_);

        setAExpr(_aExpr_);

    }

    @Override
    public Object clone()
    {
        return new AIfACondicional(
            cloneNode(this._ifId_),
            cloneNode(this._aCondicao_),
            cloneNode(this._thenId_),
            cloneNode(this._aExpr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfACondicional(this);
    }

    public TIfId getIfId()
    {
        return this._ifId_;
    }

    public void setIfId(TIfId node)
    {
        if(this._ifId_ != null)
        {
            this._ifId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ifId_ = node;
    }

    public PACondicao getACondicao()
    {
        return this._aCondicao_;
    }

    public void setACondicao(PACondicao node)
    {
        if(this._aCondicao_ != null)
        {
            this._aCondicao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aCondicao_ = node;
    }

    public TThenId getThenId()
    {
        return this._thenId_;
    }

    public void setThenId(TThenId node)
    {
        if(this._thenId_ != null)
        {
            this._thenId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._thenId_ = node;
    }

    public PAExpr getAExpr()
    {
        return this._aExpr_;
    }

    public void setAExpr(PAExpr node)
    {
        if(this._aExpr_ != null)
        {
            this._aExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ifId_)
            + toString(this._aCondicao_)
            + toString(this._thenId_)
            + toString(this._aExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ifId_ == child)
        {
            this._ifId_ = null;
            return;
        }

        if(this._aCondicao_ == child)
        {
            this._aCondicao_ = null;
            return;
        }

        if(this._thenId_ == child)
        {
            this._thenId_ = null;
            return;
        }

        if(this._aExpr_ == child)
        {
            this._aExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ifId_ == oldChild)
        {
            setIfId((TIfId) newChild);
            return;
        }

        if(this._aCondicao_ == oldChild)
        {
            setACondicao((PACondicao) newChild);
            return;
        }

        if(this._thenId_ == oldChild)
        {
            setThenId((TThenId) newChild);
            return;
        }

        if(this._aExpr_ == oldChild)
        {
            setAExpr((PAExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
