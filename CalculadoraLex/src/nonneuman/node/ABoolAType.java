/* This file was generated by SableCC (http://www.sablecc.org/). */

package nonneuman.node;

import nonneuman.analysis.*;

@SuppressWarnings("nls")
public final class ABoolAType extends PAType
{
    private TBoolId _boolId_;

    public ABoolAType()
    {
        // Constructor
    }

    public ABoolAType(
        @SuppressWarnings("hiding") TBoolId _boolId_)
    {
        // Constructor
        setBoolId(_boolId_);

    }

    @Override
    public Object clone()
    {
        return new ABoolAType(
            cloneNode(this._boolId_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABoolAType(this);
    }

    public TBoolId getBoolId()
    {
        return this._boolId_;
    }

    public void setBoolId(TBoolId node)
    {
        if(this._boolId_ != null)
        {
            this._boolId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._boolId_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._boolId_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._boolId_ == child)
        {
            this._boolId_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._boolId_ == oldChild)
        {
            setBoolId((TBoolId) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
