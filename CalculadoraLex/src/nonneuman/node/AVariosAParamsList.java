/* This file was generated by SableCC (http://www.sablecc.org/). */

package nonneuman.node;

import nonneuman.analysis.*;

@SuppressWarnings("nls")
public final class AVariosAParamsList extends PAParamsList
{
    private PAParametro _aParametro_;
    private TComma _comma_;
    private PAParamsList _params_;

    public AVariosAParamsList()
    {
        // Constructor
    }

    public AVariosAParamsList(
        @SuppressWarnings("hiding") PAParametro _aParametro_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PAParamsList _params_)
    {
        // Constructor
        setAParametro(_aParametro_);

        setComma(_comma_);

        setParams(_params_);

    }

    @Override
    public Object clone()
    {
        return new AVariosAParamsList(
            cloneNode(this._aParametro_),
            cloneNode(this._comma_),
            cloneNode(this._params_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariosAParamsList(this);
    }

    public PAParametro getAParametro()
    {
        return this._aParametro_;
    }

    public void setAParametro(PAParametro node)
    {
        if(this._aParametro_ != null)
        {
            this._aParametro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aParametro_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PAParamsList getParams()
    {
        return this._params_;
    }

    public void setParams(PAParamsList node)
    {
        if(this._params_ != null)
        {
            this._params_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._params_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aParametro_)
            + toString(this._comma_)
            + toString(this._params_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aParametro_ == child)
        {
            this._aParametro_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._params_ == child)
        {
            this._params_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aParametro_ == oldChild)
        {
            setAParametro((PAParametro) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._params_ == oldChild)
        {
            setParams((PAParamsList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
