/* This file was generated by SableCC (http://www.sablecc.org/). */

package nonneuman.node;

import nonneuman.analysis.*;

@SuppressWarnings("nls")
public final class AUnicoAParamsList extends PAParamsList
{
    private PAParametro _aParametro_;

    public AUnicoAParamsList()
    {
        // Constructor
    }

    public AUnicoAParamsList(
        @SuppressWarnings("hiding") PAParametro _aParametro_)
    {
        // Constructor
        setAParametro(_aParametro_);

    }

    @Override
    public Object clone()
    {
        return new AUnicoAParamsList(
            cloneNode(this._aParametro_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnicoAParamsList(this);
    }

    public PAParametro getAParametro()
    {
        return this._aParametro_;
    }

    public void setAParametro(PAParametro node)
    {
        if(this._aParametro_ != null)
        {
            this._aParametro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aParametro_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aParametro_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aParametro_ == child)
        {
            this._aParametro_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aParametro_ == oldChild)
        {
            setAParametro((PAParametro) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
