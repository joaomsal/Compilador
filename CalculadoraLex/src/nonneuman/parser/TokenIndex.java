/* This file was generated by SableCC (http://www.sablecc.org/). */

package nonneuman.parser;

import nonneuman.node.*;
import nonneuman.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTEntryPoint(@SuppressWarnings("unused") TEntryPoint node)
    {
        this.index = 0;
    }

    @Override
    public void caseTConstId(@SuppressWarnings("unused") TConstId node)
    {
        this.index = 1;
    }

    @Override
    public void caseTFuncId(@SuppressWarnings("unused") TFuncId node)
    {
        this.index = 2;
    }

    @Override
    public void caseTIfId(@SuppressWarnings("unused") TIfId node)
    {
        this.index = 3;
    }

    @Override
    public void caseTThenId(@SuppressWarnings("unused") TThenId node)
    {
        this.index = 4;
    }

    @Override
    public void caseTElseId(@SuppressWarnings("unused") TElseId node)
    {
        this.index = 5;
    }

    @Override
    public void caseTIntId(@SuppressWarnings("unused") TIntId node)
    {
        this.index = 6;
    }

    @Override
    public void caseTBoolId(@SuppressWarnings("unused") TBoolId node)
    {
        this.index = 7;
    }

    @Override
    public void caseTRealId(@SuppressWarnings("unused") TRealId node)
    {
        this.index = 8;
    }

    @Override
    public void caseTLambdaId(@SuppressWarnings("unused") TLambdaId node)
    {
        this.index = 9;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 10;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 11;
    }

    @Override
    public void caseTMult(@SuppressWarnings("unused") TMult node)
    {
        this.index = 12;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 13;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 14;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 15;
    }

    @Override
    public void caseTGThan(@SuppressWarnings("unused") TGThan node)
    {
        this.index = 16;
    }

    @Override
    public void caseTLThan(@SuppressWarnings("unused") TLThan node)
    {
        this.index = 17;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 18;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 19;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 20;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 21;
    }

    @Override
    public void caseTLParen(@SuppressWarnings("unused") TLParen node)
    {
        this.index = 22;
    }

    @Override
    public void caseTRParen(@SuppressWarnings("unused") TRParen node)
    {
        this.index = 23;
    }

    @Override
    public void caseTLBrac(@SuppressWarnings("unused") TLBrac node)
    {
        this.index = 24;
    }

    @Override
    public void caseTRBrac(@SuppressWarnings("unused") TRBrac node)
    {
        this.index = 25;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 26;
    }

    @Override
    public void caseTBoolType(@SuppressWarnings("unused") TBoolType node)
    {
        this.index = 27;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 28;
    }

    @Override
    public void caseTIntType(@SuppressWarnings("unused") TIntType node)
    {
        this.index = 29;
    }

    @Override
    public void caseTRealType(@SuppressWarnings("unused") TRealType node)
    {
        this.index = 30;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 31;
    }
}
